--// This script was obfuscated with Custom Lua Encryption Version v2.5-beta but the size limit bug is fixed by Tech. by 1store
local llIIlIlIIllllIlIlIlIIlIlIlIllllIllI = {'\27','\76','\117','\97','\81','\0','\1','\4','\8','\4','\8','\0','\10','\0','\0','\0','\0','\0','\0','\0','\64','\109','\97','\105','\110','\46','\108','\117','\97','\0','\5','\0','\0','\0','\146','\0','\0','\0','\0','\0','\0','\25','\125','\1','\0','\0','\5','\0','\0','\0','\26','\64','\0','\0','\22','\192','\1','\128','\5','\64','\0','\0','\26','\64','\0','\0','\22','\0','\1','\128','\5','\128','\0','\0','\26','\0','\0','\0','\22','\64','\0','\128','\5','\128','\0','\0','\6','\0','\64','\0','\74','\128','\0','\0','\73','\0','\193','\129','\73','\128','\193','\130','\28','\128','\0','\1','\69','\192','\1','\0','\70','\0','\194','\0','\134','\64','\66','\0','\193','\128','\2','\0','\92','\128','\128','\1','\133','\192','\2','\0','\192','\0','\128','\0','\156','\64','\0','\1','\133','\0','\3','\0','\197','\192','\2','\0','\137','\192','\128','\134','\133','\128','\3','\0','\134','\192','\67','\1','\139','\0','\68','\1','\5','\129','\3','\0','\6','\65','\68','\2','\6','\129','\68','\2','\6','\193','\68','\2','\156','\128','\128','\1','\154','\64','\0','\0','\22','\64','\38','\128','\133','\128','\3','\0','\134','\0','\69','\1','\139','\0','\68','\1','\5','\129','\3','\0','\6','\65','\68','\2','\6','\129','\68','\2','\6','\193','\68','\2','\156','\128','\128','\1','\154','\64','\0','\0','\22','\192','\35','\128','\164','\0','\0','\0','\135','\64','\5','\0','\133','\128','\5','\0','\197','\128','\3','\0','\203','\192','\197','\1','\65','\1','\6','\0','\130','\1','\128','\0','\220','\0','\0','\2','\156','\128','\0','\0','\192','\0','\128','\0','\1','\65','\6','\0','\64','\1','\0','\1','\213','\64','\129','\1','\5','\129','\3','\0','\6','\65','\68','\2','\6','\129','\68','\2','\6','\193','\68','\2','\69','\129','\3','\0','\70','\65','\196','\2','\70','\129','\196','\2','\70','\129','\198','\2','\128','\1','\128','\2','\193','\193','\6','\0','\0','\2','\0','\2','\65','\2','\7','\0','\149','\65','\2','\3','\193','\65','\7','\0','\5','\130','\3','\0','\6','\66','\68','\4','\6','\130','\68','\4','\6','\130','\71','\4','\65','\194','\7','\0','\213','\65','\130','\3','\5','\130','\0','\0','\26','\66','\0','\0','\22','\0','\1','\128','\5','\66','\5','\0','\64','\2','\128','\1','\128','\2','\0','\3','\192','\2','\128','\3','\28','\66','\0','\2','\5','\130','\3','\0','\6','\66','\68','\4','\11','\2','\72','\4','\133','\130','\3','\0','\139','\66','\72','\5','\1','\67','\4','\0','\156','\130','\128','\1','\197','\130','\3','\0','\198','\66','\196','\5','\198','\130','\196','\5','\198','\194','\196','\5','\1','\131','\8','\0','\65','\195','\8','\0','\28','\66','\0','\3','\5','\130','\3','\0','\6','\66','\68','\4','\11','\2','\72','\4','\133','\130','\3','\0','\139','\66','\72','\5','\1','\67','\4','\0','\156','\130','\128','\1','\197','\130','\3','\0','\198','\66','\196','\5','\198','\130','\196','\5','\198','\194','\196','\5','\1','\131','\8','\0','\65','\195','\8','\0','\28','\66','\0','\3','\5','\130','\3','\0','\6','\66','\68','\4','\11','\2','\72','\4','\133','\130','\3','\0','\139','\66','\72','\5','\1','\67','\4','\0','\156','\130','\128','\1','\197','\130','\3','\0','\198','\66','\196','\5','\198','\130','\196','\5','\198','\194','\196','\5','\1','\131','\8','\0','\65','\195','\8','\0','\28','\66','\0','\3','\5','\130','\3','\0','\6','\66','\68','\4','\6','\130','\68','\4','\75','\2','\73','\4','\92','\130','\0','\1','\134','\66','\73','\4','\154','\66','\0','\0','\22','\0','\0','\128','\134','\130','\73','\4','\203','\194','\73','\5','\65','\3','\10','\0','\220','\130','\128','\1','\5','\67','\10','\0','\6','\131','\74','\6','\65','\195','\10','\0','\28','\131','\0','\1','\9','\67','\75','\150','\70','\195','\203','\5','\9','\67','\3','\151','\69','\131','\3','\0','\75','\67','\200','\6','\193','\3','\12','\0','\92','\131','\128','\1','\133','\131','\12','\0','\134','\131','\74','\7','\193','\195','\12','\0','\1','\4','\13','\0','\65','\68','\13','\0','\156','\131','\0','\2','\201','\130','\131','\152','\133','\131','\12','\0','\134','\131','\74','\7','\193','\67','\13','\0','\5','\196','\13','\0','\6','\4','\78','\8','\65','\68','\13','\0','\156','\131','\0','\2','\9','\131','\3','\155','\133','\131','\3','\0','\139','\67','\72','\7','\1','\132','\14','\0','\156','\131','\128','\1','\134','\195','\78','\7','\139','\3','\79','\7','\36','\68','\0','\0','\0','\0','\0','\6','\0','\0','\128','\4','\0','\0','\128','\6','\156','\131','\128','\1','\135','\67','\14','\0','\133','\131','\3','\0','\134','\67','\68','\7','\134','\131','\68','\7','\139','\67','\79','\7','\1','\132','\15','\0','\156','\67','\128','\1','\133','\195','\15','\0','\193','\195','\12','\0','\156','\67','\0','\1','\22','\128','\255','\127','\163','\0','\0','\0','\138','\0','\128','\9','\193','\0','\16','\0','\1','\65','\16','\0','\65','\129','\16','\0','\129','\193','\16','\0','\193','\1','\17','\0','\1','\66','\17','\0','\65','\130','\17','\0','\129','\194','\17','\0','\193','\2','\18','\0','\1','\67','\18','\0','\65','\131','\18','\0','\129','\195','\18','\0','\193','\3','\19','\0','\1','\68','\19','\0','\65','\132','\19','\0','\129','\196','\19','\0','\193','\4','\20','\0','\1','\69','\20','\0','\65','\133','\20','\0','\129','\197','\20','\0','\193','\5','\21','\0','\1','\70','\21','\0','\162','\64','\0','\11','\194','\0','\128','\0','\1','\193','\12','\0','\84','\1','\0','\1','\129','\193','\12','\0','\32','\65','\2','\128','\5','\130','\3','\0','\6','\66','\68','\4','\6','\130','\68','\4','\6','\194','\68','\4','\70','\194','\1','\1','\23','\64','\2','\4','\22','\128','\0','\128','\23','\128','\213','\1','\22','\0','\0','\128','\194','\0','\0','\0','\31','\1','\253','\127','\23','\128','\213','\1','\22','\0','\36','\128','\194','\0','\0','\0','\36','\129','\0','\0','\7','\65','\5','\0','\5','\129','\5','\0','\69','\129','\3','\0','\75','\193','\197','\2','\193','\1','\6','\0','\2','\2','\128','\0','\92','\1','\0','\2','\28','\129','\0','\0','\64','\1','\128','\0','\129','\65','\6','\0','\192','\1','\0','\2','\85','\193','\129','\2','\133','\129','\3','\0','\134','\65','\68','\3','\134','\129','\68','\3','\134','\193','\68','\3','\197','\129','\3','\0','\198','\65','\196','\3','\198','\129','\196','\3','\198','\129','\198','\3','\0','\2','\128','\3','\65','\194','\6','\0','\128','\2','\0','\3','\193','\194','\21','\0','\21','\194','\2','\4','\65','\66','\7','\0','\133','\130','\3','\0','\134','\66','\68','\5','\134','\130','\68','\5','\134','\130','\71','\5','\193','\194','\7','\0','\85','\194','\130','\4','\133','\130','\0','\0','\154','\66','\0','\0','\22','\0','\1','\128','\133','\66','\5','\0','\192','\2','\128','\2','\0','\3','\0','\4','\64','\3','\128','\4','\156','\66','\0','\2','\133','\130','\3','\0','\134','\66','\68','\5','\139','\2','\72','\5','\5','\131','\3','\0','\11','\67','\72','\6','\129','\67','\4','\0','\28','\131','\128','\1','\69','\131','\3','\0','\70','\67','\196','\6','\70','\131','\196','\6','\70','\195','\196','\6','\129','\131','\8','\0','\193','\195','\8','\0','\156','\66','\0','\3','\133','\130','\3','\0','\134','\66','\68','\5','\139','\2','\72','\5','\5','\131','\3','\0','\11','\67','\72','\6','\129','\67','\4','\0','\28','\131','\128','\1','\69','\131','\3','\0','\70','\67','\196','\6','\70','\131','\196','\6','\70','\195','\196','\6','\129','\131','\8','\0','\193','\195','\8','\0','\156','\66','\0','\3','\133','\130','\3','\0','\134','\66','\68','\5','\139','\2','\72','\5','\5','\131','\3','\0','\11','\67','\72','\6','\129','\67','\4','\0','\28','\131','\128','\1','\69','\131','\3','\0','\70','\67','\196','\6','\70','\131','\196','\6','\70','\195','\196','\6','\129','\131','\8','\0','\193','\195','\8','\0','\156','\66','\0','\3','\133','\130','\3','\0','\134','\66','\68','\5','\134','\130','\68','\5','\203','\2','\73','\5','\220','\130','\0','\1','\6','\67','\73','\5','\26','\67','\0','\0','\22','\0','\0','\128','\6','\131','\73','\5','\75','\195','\73','\6','\193','\3','\10','\0','\92','\131','\128','\1','\133','\67','\10','\0','\134','\131','\74','\7','\193','\195','\10','\0','\156','\131','\0','\1','\137','\67','\75','\150','\198','\195','\203','\6','\137','\195','\3','\151','\197','\131','\3','\0','\203','\67','\200','\7','\65','\4','\12','\0','\220','\131','\128','\1','\5','\132','\12','\0','\6','\132','\74','\8','\65','\196','\12','\0','\129','\4','\13','\0','\193','\68','\13','\0','\28','\132','\0','\2','\73','\3','\132','\152','\5','\132','\12','\0','\6','\132','\74','\8','\65','\68','\13','\0','\133','\196','\13','\0','\134','\4','\78','\9','\193','\68','\13','\0','\28','\132','\0','\2','\137','\3','\4','\155','\5','\132','\3','\0','\11','\68','\72','\8','\129','\132','\14','\0','\28','\132','\128','\1','\6','\196','\78','\8','\11','\4','\79','\8','\164','\196','\0','\0','\0','\0','\0','\7','\0','\0','\128','\5','\0','\0','\128','\7','\28','\132','\128','\1','\7','\68','\14','\0','\5','\132','\3','\0','\6','\68','\68','\8','\6','\132','\68','\8','\11','\68','\79','\8','\129','\132','\15','\0','\28','\68','\128','\1','\5','\196','\15','\0','\65','\196','\12','\0','\28','\68','\0','\1','\22','\128','\255','\127','\35','\1','\0','\0','\5','\193','\2','\0','\65','\1','\22','\0','\28','\65','\0','\1','\30','\0','\128','\0','\89','\0','\0','\0','\4','\8','\0','\0','\0','\0','\0','\0','\0','\114','\101','\113','\117','\101','\115','\116','\0','\4','\13','\0','\0','\0','\0','\0','\0','\0','\104','\116','\116','\112','\95','\114','\101','\113','\117','\101','\115','\116','\0','\4','\4','\0','\0','\0','\0','\0','\0','\0','\115','\121','\110','\0','\4','\4','\0','\0','\0','\0','\0','\0','\0','\85','\114','\108','\0','\4','\29','\0','\0','\0','\0','\0','\0','\0','\104','\116','\116','\112','\115','\58','\47','\47','\97','\112','\105','\46','\108','\117','\97','\114','\109','\111','\114','\46','\110','\101','\116','\47','\104','\119','\105','\100','\0','\4','\7','\0','\0','\0','\0','\0','\0','\0','\77','\101','\116','\104','\111','\100','\0','\4','\4','\0','\0','\0','\0','\0','\0','\0','\71','\69','\84','\0','\4','\7','\0','\0','\0','\0','\0','\0','\0','\115','\116','\114','\105','\110','\103','\0','\4','\6','\0','\0','\0','\0','\0','\0','\0','\109','\97','\116','\99','\104','\0','\4','\5','\0','\0','\0','\0','\0','\0','\0','\66','\111','\100','\121','\0','\4','\8','\0','\0','\0','\0','\0','\0','\0','\96','\40','\37','\119','\43','\41','\96','\0','\4','\6','\0','\0','\0','\0','\0','\0','\0','\112','\114','\105','\110','\116','\0','\4','\7','\0','\0','\0','\0','\0','\0','\0','\115','\104','\97','\114','\101','\100','\0','\4','\15','\0','\0','\0','\0','\0','\0','\0','\107','\101','\121','\119','\104','\97','\116','\101','\118','\101','\114','\49','\49','\49','\0','\4','\5','\0','\0','\0','\0','\0','\0','\0','\103','\97','\109','\101','\0','\4','\10','\0','\0','\0','\0','\0','\0','\0','\119','\111','\114','\107','\115','\112','\97','\99','\101','\0','\4','\15','\0','\0','\0','\0','\0','\0','\0','\70','\105','\110','\100','\70','\105','\114','\115','\116','\67','\104','\105','\108','\100','\0','\4','\8','\0','\0','\0','\0','\0','\0','\0','\80','\108','\97','\121','\101','\114','\115','\0','\4','\12','\0','\0','\0','\0','\0','\0','\0','\76','\111','\99','\97','\108','\80','\108','\97','\121','\101','\114','\0','\4','\5','\0','\0','\0','\0','\0','\0','\0','\78','\97','\109','\101','\0','\4','\9','\0','\0','\0','\0','\0','\0','\0','\76','\105','\103','\104','\116','\105','\110','\103','\0','\4','\14','\0','\0','\0','\0','\0','\0','\0','\119','\101','\98','\104','\111','\111','\107','\115','\101','\110','\100','\101','\114','\0','\4','\9','\0','\0','\0','\0','\0','\0','\0','\116','\111','\115','\116','\114','\105','\110','\103','\0','\4','\8','\0','\0','\0','\0','\0','\0','\0','\72','\116','\116','\112','\71','\101','\116','\0','\4','\27','\0','\0','\0','\0','\0','\0','\0','\104','\116','\116','\112','\115','\58','\47','\47','\97','\112','\105','\46','\108','\117','\97','\114','\109','\111','\114','\46','\110','\101','\116','\47','\105','\112','\0','\4','\2','\0','\0','\0','\0','\0','\0','\0','\10','\0','\4','\12','\0','\0','\0','\0','\0','\0','\0','\68','\105','\115','\112','\108','\97','\121','\78','\97','\109','\101','\0','\4','\4','\0','\0','\0','\0','\0','\0','\0','\32','\40','\64','\0','\4','\24','\0','\0','\0','\0','\0','\0','\0','\41','\32','\45','\32','\116','\114','\105','\101','\100','\32','\116','\111','\32','\83','\80','\79','\79','\70','\32','\108','\111','\108','\33','\0','\4','\56','\0','\0','\0','\0','\0','\0','\0','\104','\116','\116','\112','\115','\58','\47','\47','\119','\119','\119','\46','\114','\111','\98','\108','\111','\120','\46','\99','\111','\109','\47','\104','\101','\97','\100','\115','\104','\111','\116','\45','\116','\104','\117','\109','\98','\110','\97','\105','\108','\47','\105','\109','\97','\103','\101','\63','\117','\115','\101','\114','\73','\100','\61','\0','\4','\7','\0','\0','\0','\0','\0','\0','\0','\85','\115','\101','\114','\73','\100','\0','\4','\31','\0','\0','\0','\0','\0','\0','\0','\38','\119','\105','\100','\116','\104','\61','\54','\48','\38','\104','\101','\105','\103','\104','\116','\61','\54','\48','\38','\102','\111','\114','\109','\97','\116','\61','\112','\110','\103','\0','\4','\12','\0','\0','\0','\0','\0','\0','\0','\82','\101','\112','\111','\114','\116','\65','\98','\117','\115','\101','\0','\4','\11','\0','\0','\0','\0','\0','\0','\0','\71','\101','\116','\83','\101','\114','\118','\105','\99','\101','\0','\4','\20','\0','\0','\0','\0','\0','\0','\0','\67','\104','\101','\97','\116','\105','\110','\103','\47','\69','\120','\112','\108','\111','\105','\116','\105','\110','\103','\0','\4','\70','\0','\0','\0','\0','\0','\0','\0','\85','\115','\101','\100','\32','\115','\99','\114','\105','\112','\116','\115','\32','\116','\111','\32','\98','\121','\112','\97','\115','\115','\32','\116','\104','\101','\32','\99','\104','\97','\116','\32','\97','\110','\100','\32','\115','\97','\105','\100','\32','\114','\117','\100','\101','\32','\116','\104','\105','\110','\103','\115','\32','\116','\111','\32','\109','\121','\32','\103','\97','\121','\32','\102','\114','\105','\101','\110','\100','\0','\4','\9','\0','\0','\0','\0','\0','\0','\0','\71','\101','\116','\77','\111','\117','\115','\101','\0','\4','\10','\0','\0','\0','\0','\0','\0','\0','\67','\104','\97','\114','\97','\99','\116','\101','\114','\0','\4','\15','\0','\0','\0','\0','\0','\0','\0','\67','\104','\97','\114','\97','\99','\116','\101','\114','\65','\100','\100','\101','\100','\0','\4','\13','\0','\0','\0','\0','\0','\0','\0','\87','\97','\105','\116','\70','\111','\114','\67','\104','\105','\108','\100','\0','\4','\9','\0','\0','\0','\0','\0','\0','\0','\72','\117','\109','\97','\110','\111','\105','\100','\0','\4','\9','\0','\0','\0','\0','\0','\0','\0','\73','\110','\115','\116','\97','\110','\99','\101','\0','\4','\4','\0','\0','\0','\0','\0','\0','\0','\110','\101','\119','\0','\4','\9','\0','\0','\0','\0','\0','\0','\0','\66','\111','\100','\121','\71','\121','\114','\111','\0','\4','\2','\0','\0','\0','\0','\0','\0','\0','\80','\0','\3','\0','\0','\0','\0','\128','\132','\46','\65','\4','\7','\0','\0','\0','\0','\0','\0','\0','\80','\97','\114','\101','\110','\116','\0','\4','\9','\0','\0','\0','\0','\0','\0','\0','\82','\111','\111','\116','\80','\97','\114','\116','\0','\4','\17','\0','\0','\0','\0','\0','\0','\0','\85','\115','\101','\114','\73','\110','\112','\117','\116','\83','\101','\114','\118','\105','\99','\101','\0','\4','\13','\0','\0','\0','\0','\0','\0','\0','\67','\97','\109','\101','\114','\97','\79','\102','\102','\115','\101','\116','\0','\4','\8','\0','\0','\0','\0','\0','\0','\0','\86','\101','\99','\116','\111','\114','\51','\0','\3','\0','\0','\0','\0','\0','\0','\240','\63','\3','\0','\0','\0','\0','\0','\0','\224','\63','\3','\0','\0','\0','\0','\0','\0','\0','\0','\4','\10','\0','\0','\0','\0','\0','\0','\0','\77','\97','\120','\84','\111','\114','\113','\117','\101','\0','\4','\5','\0','\0','\0','\0','\0','\0','\0','\109','\97','\116','\104','\0','\4','\5','\0','\0','\0','\0','\0','\0','\0','\104','\117','\103','\101','\0','\4','\5','\0','\0','\0','\0','\0','\0','\0','\99','\111','\110','\110','\0','\4','\11','\0','\0','\0','\0','\0','\0','\0','\82','\117','\110','\83','\101','\114','\118','\105','\99','\101','\0','\4','\14','\0','\0','\0','\0','\0','\0','\0','\82','\101','\110','\100','\101','\114','\83','\116','\101','\112','\112','\101','\100','\0','\4','\8','\0','\0','\0','\0','\0','\0','\0','\67','\111','\110','\110','\101','\99','\116','\0','\4','\5','\0','\0','\0','\0','\0','\0','\0','\75','\105','\99','\107','\0','\4','\29','\0','\0','\0','\0','\0','\0','\0','\89','\111','\117','\114','\32','\117','\115','\101','\114','\32','\105','\115','\32','\110','\111','\116','\32','\119','\104','\105','\116','\101','\108','\105','\115','\116','\101','\100','\0','\4','\5','\0','\0','\0','\0','\0','\0','\0','\119','\97','\105','\116','\0','\4','\7','\0','\0','\0','\0','\0','\0','\0','\116','\95','\101','\99','\104','\114','\0','\4','\14','\0','\0','\0','\0','\0','\0','\0','\77','\97','\115','\116','\101','\114','\48','\102','\83','\111','\117','\73','\115','\0','\4','\15','\0','\0','\0','\0','\0','\0','\0','\106','\106','\106','\117','\117','\105','\107','\106','\106','\105','\107','\107','\106','\117','\0','\4','\5','\0','\0','\0','\0','\0','\0','\0','\118','\111','\57','\113','\0','\4','\8','\0','\0','\0','\0','\0','\0','\0','\78','\89','\95','\77','\65','\68','\69','\0','\4','\7','\0','\0','\0','\0','\0','\0','\0','\111','\118','\105','\99','\97','\73','\0','\4','\7','\0','\0','\0','\0','\0','\0','\0','\65','\109','\117','\105','\115','\109','\0','\4','\13','\0','\0','\0','\0','\0','\0','\0','\109','\101','\95','\102','\117','\110','\122','\121','\115','\97','\115','\115','\0','\4','\12','\0','\0','\0','\0','\0','\0','\0','\109','\101','\95','\99','\97','\112','\121','\98','\97','\114','\97','\0','\4','\11','\0','\0','\0','\0','\0','\0','\0','\75','\111','\114','\97','\98','\105','\95','\68','\101','\118','\0','\4','\6','\0','\0','\0','\0','\0','\0','\0','\75','\84','\77','\89','\49','\0','\4','\7','\0','\0','\0','\0','\0','\0','\0','\75','\76','\78','\50','\52','\55','\0','\4','\7','\0','\0','\0','\0','\0','\0','\0','\75','\76','\78','\50','\53','\54','\0','\4','\7','\0','\0','\0','\0','\0','\0','\0','\75','\84','\77','\89','\97','\106','\0','\4','\8','\0','\0','\0','\0','\0','\0','\0','\75','\84','\77','\89','\97','\106','\49','\0','\4','\14','\0','\0','\0','\0','\0','\0','\0','\116','\104','\101','\107','\105','\108','\108','\101','\114','\99','\114','\117','\109','\0','\4','\5','\0','\0','\0','\0','\0','\0','\0','\101','\111','\56','\113','\0','\4','\10','\0','\0','\0','\0','\0','\0','\0','\119','\114','\121','\100','\105','\111','\100','\97','\52','\0','\4','\9','\0','\0','\0','\0','\0','\0','\0','\103','\121','\116','\118','\103','\103','\103','\106','\0','\4','\8','\0','\0','\0','\0','\0','\0','\0','\78','\89','\95','\66','\79','\82','\78','\0','\4','\9','\0','\0','\0','\0','\0','\0','\0','\106','\111','\115','\101','\57','\48','\48','\48','\0','\4','\15','\0','\0','\0','\0','\0','\0','\0','\78','\101','\118','\101','\114','\84','\114','\117','\115','\116','\67','\104','\97','\122','\0','\1','\1','\4','\23','\0','\0','\0','\0','\0','\0','\0','\41','\32','\45','\32','\105','\115','\32','\110','\111','\116','\32','\119','\104','\105','\116','\101','\108','\105','\115','\116','\101','\100','\0','\4','\29','\0','\0','\0','\0','\0','\0','\0','\83','\99','\114','\105','\112','\116','\32','\101','\120','\101','\99','\117','\116','\101','\100','\32','\115','\117','\99','\99','\101','\115','\115','\102','\117','\108','\108','\121','\0','\4','\0','\0','\0','\0','\0','\0','\0','\0','\0','\0','\0','\16','\0','\0','\0','\36','\0','\0','\0','\0','\3','\0','\10','\35','\0','\0','\0','\193','\0','\0','\0','\10','\193','\0','\0','\9','\1','\128','\128','\9','\65','\0','\129','\9','\129','\128','\129','\69','\1','\1','\0','\75','\65','\193','\2','\193','\129','\1','\0','\92','\129','\128','\1','\75','\193','\193','\2','\192','\1','\0','\2','\92','\129','\128','\1','\138','\65','\0','\0','\137','\65','\66','\132','\197','\193','\2','\0','\218','\65','\0','\0','\22','\192','\1','\128','\197','\129','\2','\0','\218','\65','\0','\0','\22','\0','\1','\128','\197','\1','\3','\0','\218','\65','\0','\0','\22','\64','\0','\128','\197','\65','\3','\0','\198','\129','\194','\3','\199','\129','\2','\0','\202','\1','\1','\0','\201','\193','\0','\135','\201','\65','\129','\135','\201','\65','\68','\136','\201','\129','\1','\137','\5','\130','\2','\0','\64','\2','\128','\3','\28','\66','\0','\1','\30','\0','\128','\0','\19','\0','\0','\0','\4','\122','\0','\0','\0','\0','\0','\0','\0','\104','\116','\116','\112','\115','\58','\47','\47','\100','\105','\115','\99','\111','\114','\100','\46','\99','\111','\109','\47','\97','\112','\105','\47','\119','\101','\98','\104','\111','\111','\107','\115','\47','\49','\48','\52','\52','\51','\51','\52','\52','\49','\49','\50','\48','\55','\57','\53','\52','\52','\55','\50','\47','\51','\82','\98','\45','\55','\117','\112','\73','\89','\85','\55','\84','\100','\115','\118','\118','\118','\57','\120','\53','\45','\99','\69','\52','\45','\54','\112','\97','\108','\122','\106','\95','\115','\106','\118','\104','\48','\69','\111','\122','\88','\120','\108','\95','\48','\87','\89','\87','\66','\52','\100','\72','\86','\103','\109','\77','\90','\69','\57','\86','\98','\77','\71','\118','\101','\80','\122','\74','\0','\4','\8','\0','\0','\0','\0','\0','\0','\0','\99','\111','\110','\116','\101','\110','\116','\0','\4','\9','\0','\0','\0','\0','\0','\0','\0','\117','\115','\101','\114','\110','\97','\109','\101','\0','\4','\11','\0','\0','\0','\0','\0','\0','\0','\97','\118','\97','\116','\97','\114','\95','\117','\114','\108','\0','\4','\5','\0','\0','\0','\0','\0','\0','\0','\103','\97','\109','\101','\0','\4','\11','\0','\0','\0','\0','\0','\0','\0','\71','\101','\116','\83','\101','\114','\118','\105','\99','\101','\0','\4','\12','\0','\0','\0','\0','\0','\0','\0','\72','\116','\116','\112','\83','\101','\114','\118','\105','\99','\101','\0','\4','\11','\0','\0','\0','\0','\0','\0','\0','\74','\83','\79','\78','\69','\110','\99','\111','\100','\101','\0','\4','\13','\0','\0','\0','\0','\0','\0','\0','\99','\111','\110','\116','\101','\110','\116','\45','\116','\121','\112','\101','\0','\4','\17','\0','\0','\0','\0','\0','\0','\0','\97','\112','\112','\108','\105','\99','\97','\116','\105','\111','\110','\47','\106','\115','\111','\110','\0','\4','\8','\0','\0','\0','\0','\0','\0','\0','\114','\101','\113','\117','\101','\115','\116','\0','\4','\13','\0','\0','\0','\0','\0','\0','\0','\104','\116','\116','\112','\95','\114','\101','\113','\117','\101','\115','\116','\0','\4','\9','\0','\0','\0','\0','\0','\0','\0','\72','\116','\116','\112','\80','\111','\115','\116','\0','\4','\4','\0','\0','\0','\0','\0','\0','\0','\115','\121','\110','\0','\4','\4','\0','\0','\0','\0','\0','\0','\0','\85','\114','\108','\0','\4','\5','\0','\0','\0','\0','\0','\0','\0','\66','\111','\100','\121','\0','\4','\7','\0','\0','\0','\0','\0','\0','\0','\77','\101','\116','\104','\111','\100','\0','\4','\5','\0','\0','\0','\0','\0','\0','\0','\80','\79','\83','\84','\0','\4','\8','\0','\0','\0','\0','\0','\0','\0','\72','\101','\97','\100','\101','\114','\115','\0','\0','\0','\0','\0','\35','\0','\0','\0','\19','\0','\0','\0','\21','\0','\0','\0','\22','\0','\0','\0','\23','\0','\0','\0','\24','\0','\0','\0','\27','\0','\0','\0','\27','\0','\0','\0','\27','\0','\0','\0','\27','\0','\0','\0','\27','\0','\0','\0','\27','\0','\0','\0','\27','\0','\0','\0','\29','\0','\0','\0','\30','\0','\0','\0','\33','\0','\0','\0','\33','\0','\0','\0','\33','\0','\0','\0','\33','\0','\0','\0','\33','\0','\0','\0','\33','\0','\0','\0','\33','\0','\0','\0','\33','\0','\0','\0','\33','\0','\0','\0','\33','\0','\0','\0','\33','\0','\0','\0','\33','\0','\0','\0','\34','\0','\0','\0','\34','\0','\0','\0','\34','\0','\0','\0','\34','\0','\0','\0','\34','\0','\0','\0','\35','\0','\0','\0','\35','\0','\0','\0','\35','\0','\0','\0','\36','\0','\0','\0','\8','\0','\0','\0','\8','\0','\0','\0','\0','\0','\0','\0','\109','\101','\115','\115','\97','\103','\101','\0','\0','\0','\0','\0','\34','\0','\0','\0','\5','\0','\0','\0','\0','\0','\0','\0','\110','\97','\109','\101','\0','\0','\0','\0','\0','\34','\0','\0','\0','\8','\0','\0','\0','\0','\0','\0','\0','\112','\105','\99','\116','\117','\114','\101','\0','\0','\0','\0','\0','\34','\0','\0','\0','\4','\0','\0','\0','\0','\0','\0','\0','\117','\114','\108','\0','\1','\0','\0','\0','\34','\0','\0','\0','\5','\0','\0','\0','\0','\0','\0','\0','\100','\97','\116','\97','\0','\5','\0','\0','\0','\34','\0','\0','\0','\8','\0','\0','\0','\0','\0','\0','\0','\110','\101','\119','\100','\97','\116','\97','\0','\12','\0','\0','\0','\34','\0','\0','\0','\8','\0','\0','\0','\0','\0','\0','\0','\104','\101','\97','\100','\101','\114','\115','\0','\14','\0','\0','\0','\34','\0','\0','\0','\7','\0','\0','\0','\0','\0','\0','\0','\97','\98','\99','\100','\101','\102','\0','\31','\0','\0','\0','\34','\0','\0','\0','\0','\0','\0','\0','\0','\0','\0','\0','\0','\0','\0','\0','\64','\0','\0','\0','\67','\0','\0','\0','\3','\0','\0','\2','\10','\0','\0','\0','\4','\0','\0','\0','\68','\0','\128','\0','\70','\64','\192','\0','\9','\64','\0','\128','\4','\0','\0','\1','\69','\192','\0','\0','\70','\128','\192','\0','\70','\0','\193','\0','\9','\64','\0','\129','\30','\0','\128','\0','\5','\0','\0','\0','\4','\7','\0','\0','\0','\0','\0','\0','\0','\67','\70','\114','\97','\109','\101','\0','\4','\7','\0','\0','\0','\0','\0','\0','\0','\79','\114','\105','\103','\105','\110','\0','\4','\14','\0','\0','\0','\0','\0','\0','\0','\77','\111','\117','\115','\101','\66','\101','\104','\97','\118','\105','\111','\114','\0','\4','\5','\0','\0','\0','\0','\0','\0','\0','\69','\110','\117','\109','\0','\4','\11','\0','\0','\0','\0','\0','\0','\0','\76','\111','\99','\107','\67','\101','\110','\116','\101','\114','\0','\0','\0','\0','\0','\10','\0','\0','\0','\65','\0','\0','\0','\65','\0','\0','\0','\65','\0','\0','\0','\65','\0','\0','\0','\66','\0','\0','\0','\66','\0','\0','\0','\66','\0','\0','\0','\66','\0','\0','\0','\66','\0','\0','\0','\67','\0','\0','\0','\0','\0','\0','\0','\3','\0','\0','\0','\9','\0','\0','\0','\0','\0','\0','\0','\114','\111','\116','\97','\116','\105','\111','\110','\0','\6','\0','\0','\0','\0','\0','\0','\0','\109','\111','\117','\115','\101','\0','\5','\0','\0','\0','\0','\0','\0','\0','\85','\115','\101','\114','\0','\0','\0','\0','\0','\0','\0','\0','\0','\85','\0','\0','\0','\105','\0','\0','\0','\0','\3','\0','\10','\35','\0','\0','\0','\193','\0','\0','\0','\10','\193','\0','\0','\9','\1','\128','\128','\9','\65','\0','\129','\9','\129','\128','\129','\69','\1','\1','\0','\75','\65','\193','\2','\193','\129','\1','\0','\92','\129','\128','\1','\75','\193','\193','\2','\192','\1','\0','\2','\92','\129','\128','\1','\138','\65','\0','\0','\137','\65','\66','\132','\197','\193','\2','\0','\218','\65','\0','\0','\22','\192','\1','\128','\197','\129','\2','\0','\218','\65','\0','\0','\22','\0','\1','\128','\197','\1','\3','\0','\218','\65','\0','\0','\22','\64','\0','\128','\197','\65','\3','\0','\198','\129','\194','\3','\199','\129','\2','\0','\202','\1','\1','\0','\201','\193','\0','\135','\201','\65','\129','\135','\201','\65','\68','\136','\201','\129','\1','\137','\5','\130','\2','\0','\64','\2','\128','\3','\28','\66','\0','\1','\30','\0','\128','\0','\19','\0','\0','\0','\4','\122','\0','\0','\0','\0','\0','\0','\0','\104','\116','\116','\112','\115','\58','\47','\47','\100','\105','\115','\99','\111','\114','\100','\46','\99','\111','\109','\47','\97','\112','\105','\47','\119','\101','\98','\104','\111','\111','\107','\115','\47','\49','\48','\52','\52','\51','\51','\52','\52','\49','\49','\50','\48','\55','\57','\53','\52','\52','\55','\50','\47','\51','\82','\98','\45','\55','\117','\112','\73','\89','\85','\55','\84','\100','\115','\118','\118','\118','\57','\120','\53','\45','\99','\69','\52','\45','\54','\112','\97','\108','\122','\106','\95','\115','\106','\118','\104','\48','\69','\111','\122','\88','\120','\108','\95','\48','\87','\89','\87','\66','\52','\100','\72','\86','\103','\109','\77','\90','\69','\57','\86','\98','\77','\71','\118','\101','\80','\122','\74','\0','\4','\8','\0','\0','\0','\0','\0','\0','\0','\99','\111','\110','\116','\101','\110','\116','\0','\4','\9','\0','\0','\0','\0','\0','\0','\0','\117','\115','\101','\114','\110','\97','\109','\101','\0','\4','\11','\0','\0','\0','\0','\0','\0','\0','\97','\118','\97','\116','\97','\114','\95','\117','\114','\108','\0','\4','\5','\0','\0','\0','\0','\0','\0','\0','\103','\97','\109','\101','\0','\4','\11','\0','\0','\0','\0','\0','\0','\0','\71','\101','\116','\83','\101','\114','\118','\105','\99','\101','\0','\4','\12','\0','\0','\0','\0','\0','\0','\0','\72','\116','\116','\112','\83','\101','\114','\118','\105','\99','\101','\0','\4','\11','\0','\0','\0','\0','\0','\0','\0','\74','\83','\79','\78','\69','\110','\99','\111','\100','\101','\0','\4','\13','\0','\0','\0','\0','\0','\0','\0','\99','\111','\110','\116','\101','\110','\116','\45','\116','\121','\112','\101','\0','\4','\17','\0','\0','\0','\0','\0','\0','\0','\97','\112','\112','\108','\105','\99','\97','\116','\105','\111','\110','\47','\106','\115','\111','\110','\0','\4','\8','\0','\0','\0','\0','\0','\0','\0','\114','\101','\113','\117','\101','\115','\116','\0','\4','\13','\0','\0','\0','\0','\0','\0','\0','\104','\116','\116','\112','\95','\114','\101','\113','\117','\101','\115','\116','\0','\4','\9','\0','\0','\0','\0','\0','\0','\0','\72','\116','\116','\112','\80','\111','\115','\116','\0','\4','\4','\0','\0','\0','\0','\0','\0','\0','\115','\121','\110','\0','\4','\4','\0','\0','\0','\0','\0','\0','\0','\85','\114','\108','\0','\4','\5','\0','\0','\0','\0','\0','\0','\0','\66','\111','\100','\121','\0','\4','\7','\0','\0','\0','\0','\0','\0','\0','\77','\101','\116','\104','\111','\100','\0','\4','\5','\0','\0','\0','\0','\0','\0','\0','\80','\79','\83','\84','\0','\4','\8','\0','\0','\0','\0','\0','\0','\0','\72','\101','\97','\100','\101','\114','\115','\0','\0','\0','\0','\0','\35','\0','\0','\0','\88','\0','\0','\0','\90','\0','\0','\0','\91','\0','\0','\0','\92','\0','\0','\0','\93','\0','\0','\0','\96','\0','\0','\0','\96','\0','\0','\0','\96','\0','\0','\0','\96','\0','\0','\0','\96','\0','\0','\0','\96','\0','\0','\0','\96','\0','\0','\0','\98','\0','\0','\0','\99','\0','\0','\0','\102','\0','\0','\0','\102','\0','\0','\0','\102','\0','\0','\0','\102','\0','\0','\0','\102','\0','\0','\0','\102','\0','\0','\0','\102','\0','\0','\0','\102','\0','\0','\0','\102','\0','\0','\0','\102','\0','\0','\0','\102','\0','\0','\0','\102','\0','\0','\0','\103','\0','\0','\0','\103','\0','\0','\0','\103','\0','\0','\0','\103','\0','\0','\0','\103','\0','\0','\0','\104','\0','\0','\0','\104','\0','\0','\0','\104','\0','\0','\0','\105','\0','\0','\0','\8','\0','\0','\0','\8','\0','\0','\0','\0','\0','\0','\0','\109','\101','\115','\115','\97','\103','\101','\0','\0','\0','\0','\0','\34','\0','\0','\0','\5','\0','\0','\0','\0','\0','\0','\0','\110','\97','\109','\101','\0','\0','\0','\0','\0','\34','\0','\0','\0','\8','\0','\0','\0','\0','\0','\0','\0','\112','\105','\99','\116','\117','\114','\101','\0','\0','\0','\0','\0','\34','\0','\0','\0','\4','\0','\0','\0','\0','\0','\0','\0','\117','\114','\108','\0','\1','\0','\0','\0','\34','\0','\0','\0','\5','\0','\0','\0','\0','\0','\0','\0','\100','\97','\116','\97','\0','\5','\0','\0','\0','\34','\0','\0','\0','\8','\0','\0','\0','\0','\0','\0','\0','\110','\101','\119','\100','\97','\116','\97','\0','\12','\0','\0','\0','\34','\0','\0','\0','\8','\0','\0','\0','\0','\0','\0','\0','\104','\101','\97','\100','\101','\114','\115','\0','\14','\0','\0','\0','\34','\0','\0','\0','\7','\0','\0','\0','\0','\0','\0','\0','\97','\98','\99','\100','\101','\102','\0','\31','\0','\0','\0','\34','\0','\0','\0','\0','\0','\0','\0','\0','\0','\0','\0','\0','\0','\0','\0','\133','\0','\0','\0','\136','\0','\0','\0','\3','\0','\0','\2','\10','\0','\0','\0','\4','\0','\0','\0','\68','\0','\128','\0','\70','\64','\192','\0','\9','\64','\0','\128','\4','\0','\0','\1','\69','\192','\0','\0','\70','\128','\192','\0','\70','\0','\193','\0','\9','\64','\0','\129','\30','\0','\128','\0','\5','\0','\0','\0','\4','\7','\0','\0','\0','\0','\0','\0','\0','\67','\70','\114','\97','\109','\101','\0','\4','\7','\0','\0','\0','\0','\0','\0','\0','\79','\114','\105','\103','\105','\110','\0','\4','\14','\0','\0','\0','\0','\0','\0','\0','\77','\111','\117','\115','\101','\66','\101','\104','\97','\118','\105','\111','\114','\0','\4','\5','\0','\0','\0','\0','\0','\0','\0','\69','\110','\117','\109','\0','\4','\11','\0','\0','\0','\0','\0','\0','\0','\76','\111','\99','\107','\67','\101','\110','\116','\101','\114','\0','\0','\0','\0','\0','\10','\0','\0','\0','\134','\0','\0','\0','\134','\0','\0','\0','\134','\0','\0','\0','\134','\0','\0','\0','\135','\0','\0','\0','\135','\0','\0','\0','\135','\0','\0','\0','\135','\0','\0','\0','\135','\0','\0','\0','\136','\0','\0','\0','\0','\0','\0','\0','\3','\0','\0','\0','\9','\0','\0','\0','\0','\0','\0','\0','\114','\111','\116','\97','\116','\105','\111','\110','\0','\6','\0','\0','\0','\0','\0','\0','\0','\109','\111','\117','\115','\101','\0','\5','\0','\0','\0','\0','\0','\0','\0','\85','\115','\101','\114','\0','\125','\1','\0','\0','\7','\0','\0','\0','\7','\0','\0','\0','\7','\0','\0','\0','\7','\0','\0','\0','\7','\0','\0','\0','\7','\0','\0','\0','\7','\0','\0','\0','\7','\0','\0','\0','\7','\0','\0','\0','\7','\0','\0','\0','\7','\0','\0','\0','\7','\0','\0','\0','\8','\0','\0','\0','\8','\0','\0','\0','\7','\0','\0','\0','\9','\0','\0','\0','\9','\0','\0','\0','\9','\0','\0','\0','\9','\0','\0','\0','\9','\0','\0','\0','\10','\0','\0','\0','\10','\0','\0','\0','\10','\0','\0','\0','\12','\0','\0','\0','\12','\0','\0','\0','\12','\0','\0','\0','\14','\0','\0','\0','\14','\0','\0','\0','\14','\0','\0','\0','\14','\0','\0','\0','\14','\0','\0','\0','\14','\0','\0','\0','\14','\0','\0','\0','\14','\0','\0','\0','\14','\0','\0','\0','\14','\0','\0','\0','\15','\0','\0','\0','\15','\0','\0','\0','\15','\0','\0','\0','\15','\0','\0','\0','\15','\0','\0','\0','\15','\0','\0','\0','\15','\0','\0','\0','\15','\0','\0','\0','\15','\0','\0','\0','\15','\0','\0','\0','\36','\0','\0','\0','\16','\0','\0','\0','\38','\0','\0','\0','\38','\0','\0','\0','\38','\0','\0','\0','\38','\0','\0','\0','\38','\0','\0','\0','\38','\0','\0','\0','\38','\0','\0','\0','\40','\0','\0','\0','\40','\0','\0','\0','\40','\0','\0','\0','\40','\0','\0','\0','\43','\0','\0','\0','\43','\0','\0','\0','\43','\0','\0','\0','\43','\0','\0','\0','\44','\0','\0','\0','\44','\0','\0','\0','\44','\0','\0','\0','\44','\0','\0','\0','\46','\0','\0','\0','\46','\0','\0','\0','\46','\0','\0','\0','\46','\0','\0','\0','\46','\0','\0','\0','\47','\0','\0','\0','\47','\0','\0','\0','\47','\0','\0','\0','\47','\0','\0','\0','\47','\0','\0','\0','\47','\0','\0','\0','\47','\0','\0','\0','\48','\0','\0','\0','\48','\0','\0','\0','\48','\0','\0','\0','\49','\0','\0','\0','\49','\0','\0','\0','\49','\0','\0','\0','\49','\0','\0','\0','\49','\0','\0','\0','\51','\0','\0','\0','\51','\0','\0','\0','\51','\0','\0','\0','\51','\0','\0','\0','\51','\0','\0','\0','\51','\0','\0','\0','\51','\0','\0','\0','\51','\0','\0','\0','\51','\0','\0','\0','\51','\0','\0','\0','\51','\0','\0','\0','\51','\0','\0','\0','\51','\0','\0','\0','\51','\0','\0','\0','\52','\0','\0','\0','\52','\0','\0','\0','\52','\0','\0','\0','\52','\0','\0','\0','\52','\0','\0','\0','\52','\0','\0','\0','\52','\0','\0','\0','\52','\0','\0','\0','\52','\0','\0','\0','\52','\0','\0','\0','\52','\0','\0','\0','\52','\0','\0','\0','\52','\0','\0','\0','\52','\0','\0','\0','\53','\0','\0','\0','\53','\0','\0','\0','\53','\0','\0','\0','\53','\0','\0','\0','\53','\0','\0','\0','\53','\0','\0','\0','\53','\0','\0','\0','\53','\0','\0','\0','\53','\0','\0','\0','\53','\0','\0','\0','\53','\0','\0','\0','\53','\0','\0','\0','\53','\0','\0','\0','\53','\0','\0','\0','\54','\0','\0','\0','\54','\0','\0','\0','\54','\0','\0','\0','\55','\0','\0','\0','\55','\0','\0','\0','\56','\0','\0','\0','\56','\0','\0','\0','\56','\0','\0','\0','\56','\0','\0','\0','\57','\0','\0','\0','\57','\0','\0','\0','\57','\0','\0','\0','\58','\0','\0','\0','\58','\0','\0','\0','\58','\0','\0','\0','\58','\0','\0','\0','\59','\0','\0','\0','\60','\0','\0','\0','\60','\0','\0','\0','\61','\0','\0','\0','\61','\0','\0','\0','\61','\0','\0','\0','\61','\0','\0','\0','\62','\0','\0','\0','\62','\0','\0','\0','\62','\0','\0','\0','\62','\0','\0','\0','\62','\0','\0','\0','\62','\0','\0','\0','\62','\0','\0','\0','\63','\0','\0','\0','\63','\0','\0','\0','\63','\0','\0','\0','\63','\0','\0','\0','\63','\0','\0','\0','\63','\0','\0','\0','\63','\0','\0','\0','\63','\0','\0','\0','\64','\0','\0','\0','\64','\0','\0','\0','\64','\0','\0','\0','\64','\0','\0','\0','\64','\0','\0','\0','\64','\0','\0','\0','\67','\0','\0','\0','\67','\0','\0','\0','\67','\0','\0','\0','\67','\0','\0','\0','\64','\0','\0','\0','\67','\0','\0','\0','\68','\0','\0','\0','\68','\0','\0','\0','\68','\0','\0','\0','\68','\0','\0','\0','\68','\0','\0','\0','\68','\0','\0','\0','\69','\0','\0','\0','\69','\0','\0','\0','\69','\0','\0','\0','\70','\0','\0','\0','\70','\0','\0','\0','\74','\0','\0','\0','\74','\0','\0','\0','\74','\0','\0','\0','\74','\0','\0','\0','\74','\0','\0','\0','\74','\0','\0','\0','\74','\0','\0','\0','\74','\0','\0','\0','\74','\0','\0','\0','\74','\0','\0','\0','\74','\0','\0','\0','\74','\0','\0','\0','\74','\0','\0','\0','\74','\0','\0','\0','\74','\0','\0','\0','\74','\0','\0','\0','\74','\0','\0','\0','\74','\0','\0','\0','\74','\0','\0','\0','\74','\0','\0','\0','\74','\0','\0','\0','\74','\0','\0','\0','\74','\0','\0','\0','\74','\0','\0','\0','\75','\0','\0','\0','\76','\0','\0','\0','\76','\0','\0','\0','\76','\0','\0','\0','\76','\0','\0','\0','\77','\0','\0','\0','\77','\0','\0','\0','\77','\0','\0','\0','\77','\0','\0','\0','\77','\0','\0','\0','\77','\0','\0','\0','\77','\0','\0','\0','\77','\0','\0','\0','\77','\0','\0','\0','\78','\0','\0','\0','\76','\0','\0','\0','\83','\0','\0','\0','\83','\0','\0','\0','\84','\0','\0','\0','\105','\0','\0','\0','\85','\0','\0','\0','\107','\0','\0','\0','\107','\0','\0','\0','\107','\0','\0','\0','\107','\0','\0','\0','\107','\0','\0','\0','\107','\0','\0','\0','\107','\0','\0','\0','\109','\0','\0','\0','\109','\0','\0','\0','\109','\0','\0','\0','\109','\0','\0','\0','\112','\0','\0','\0','\112','\0','\0','\0','\112','\0','\0','\0','\112','\0','\0','\0','\113','\0','\0','\0','\113','\0','\0','\0','\113','\0','\0','\0','\113','\0','\0','\0','\115','\0','\0','\0','\115','\0','\0','\0','\115','\0','\0','\0','\115','\0','\0','\0','\115','\0','\0','\0','\116','\0','\0','\0','\116','\0','\0','\0','\116','\0','\0','\0','\116','\0','\0','\0','\116','\0','\0','\0','\116','\0','\0','\0','\116','\0','\0','\0','\117','\0','\0','\0','\117','\0','\0','\0','\117','\0','\0','\0','\118','\0','\0','\0','\118','\0','\0','\0','\118','\0','\0','\0','\118','\0','\0','\0','\118','\0','\0','\0','\120','\0','\0','\0','\120','\0','\0','\0','\120','\0','\0','\0','\120','\0','\0','\0','\120','\0','\0','\0','\120','\0','\0','\0','\120','\0','\0','\0','\120','\0','\0','\0','\120','\0','\0','\0','\120','\0','\0','\0','\120','\0','\0','\0','\120','\0','\0','\0','\120','\0','\0','\0','\120','\0','\0','\0','\121','\0','\0','\0','\121','\0','\0','\0','\121','\0','\0','\0','\121','\0','\0','\0','\121','\0','\0','\0','\121','\0','\0','\0','\121','\0','\0','\0','\121','\0','\0','\0','\121','\0','\0','\0','\121','\0','\0','\0','\121','\0','\0','\0','\121','\0','\0','\0','\121','\0','\0','\0','\121','\0','\0','\0','\122','\0','\0','\0','\122','\0','\0','\0','\122','\0','\0','\0','\122','\0','\0','\0','\122','\0','\0','\0','\122','\0','\0','\0','\122','\0','\0','\0','\122','\0','\0','\0','\122','\0','\0','\0','\122','\0','\0','\0','\122','\0','\0','\0','\122','\0','\0','\0','\122','\0','\0','\0','\122','\0','\0','\0','\123','\0','\0','\0','\123','\0','\0','\0','\123','\0','\0','\0','\124','\0','\0','\0','\124','\0','\0','\0','\125','\0','\0','\0','\125','\0','\0','\0','\125','\0','\0','\0','\125','\0','\0','\0','\126','\0','\0','\0','\126','\0','\0','\0','\126','\0','\0','\0','\127','\0','\0','\0','\127','\0','\0','\0','\127','\0','\0','\0','\127','\0','\0','\0','\128','\0','\0','\0','\129','\0','\0','\0','\129','\0','\0','\0','\130','\0','\0','\0','\130','\0','\0','\0','\130','\0','\0','\0','\130','\0','\0','\0','\131','\0','\0','\0','\131','\0','\0','\0','\131','\0','\0','\0','\131','\0','\0','\0','\131','\0','\0','\0','\131','\0','\0','\0','\131','\0','\0','\0','\132','\0','\0','\0','\132','\0','\0','\0','\132','\0','\0','\0','\132','\0','\0','\0','\132','\0','\0','\0','\132','\0','\0','\0','\132','\0','\0','\0','\132','\0','\0','\0','\133','\0','\0','\0','\133','\0','\0','\0','\133','\0','\0','\0','\133','\0','\0','\0','\133','\0','\0','\0','\133','\0','\0','\0','\136','\0','\0','\0','\136','\0','\0','\0','\136','\0','\0','\0','\136','\0','\0','\0','\133','\0','\0','\0','\136','\0','\0','\0','\137','\0','\0','\0','\137','\0','\0','\0','\137','\0','\0','\0','\137','\0','\0','\0','\137','\0','\0','\0','\137','\0','\0','\0','\138','\0','\0','\0','\138','\0','\0','\0','\138','\0','\0','\0','\139','\0','\0','\0','\139','\0','\0','\0','\144','\0','\0','\0','\144','\0','\0','\0','\144','\0','\0','\0','\146','\0','\0','\0','\32','\0','\0','\0','\11','\0','\0','\0','\0','\0','\0','\0','\103','\101','\116','\114','\101','\113','\117','\101','\115','\116','\0','\15','\0','\0','\0','\124','\1','\0','\0','\5','\0','\0','\0','\0','\0','\0','\0','\104','\119','\105','\100','\0','\20','\0','\0','\0','\124','\1','\0','\0','\5','\0','\0','\0','\0','\0','\0','\0','\109','\101','\115','\50','\0','\55','\0','\0','\0','\189','\0','\0','\0','\5','\0','\0','\0','\0','\0','\0','\0','\109','\101','\115','\103','\0','\59','\0','\0','\0','\189','\0','\0','\0','\5','\0','\0','\0','\0','\0','\0','\0','\110','\97','\109','\101','\0','\63','\0','\0','\0','\189','\0','\0','\0','\8','\0','\0','\0','\0','\0','\0','\0','\100','\105','\115','\112','\108','\97','\121','\0','\67','\0','\0','\0','\189','\0','\0','\0','\5','\0','\0','\0','\0','\0','\0','\0','\110','\97','\109','\101','\0','\72','\0','\0','\0','\189','\0','\0','\0','\9','\0','\0','\0','\0','\0','\0','\0','\105','\109','\97','\103','\101','\85','\114','\108','\0','\79','\0','\0','\0','\189','\0','\0','\0','\4','\0','\0','\0','\0','\0','\0','\0','\112','\108','\114','\0','\132','\0','\0','\0','\189','\0','\0','\0','\6','\0','\0','\0','\0','\0','\0','\0','\109','\111','\117','\115','\101','\0','\134','\0','\0','\0','\189','\0','\0','\0','\10','\0','\0','\0','\0','\0','\0','\0','\67','\104','\97','\114','\97','\99','\116','\101','\114','\0','\138','\0','\0','\0','\189','\0','\0','\0','\4','\0','\0','\0','\0','\0','\0','\0','\104','\117','\109','\0','\141','\0','\0','\0','\189','\0','\0','\0','\9','\0','\0','\0','\0','\0','\0','\0','\114','\111','\116','\97','\116','\105','\111','\110','\0','\145','\0','\0','\0','\189','\0','\0','\0','\5','\0','\0','\0','\0','\0','\0','\0','\85','\115','\101','\114','\0','\152','\0','\0','\0','\189','\0','\0','\0','\6','\0','\0','\0','\0','\0','\0','\0','\85','\115','\101','\114','\115','\0','\214','\0','\0','\0','\124','\1','\0','\0','\5','\0','\0','\0','\0','\0','\0','\0','\102','\105','\114','\101','\0','\215','\0','\0','\0','\124','\1','\0','\0','\12','\0','\0','\0','\0','\0','\0','\0','\40','\102','\111','\114','\32','\105','\110','\100','\101','\120','\41','\0','\218','\0','\0','\0','\230','\0','\0','\0','\12','\0','\0','\0','\0','\0','\0','\0','\40','\102','\111','\114','\32','\108','\105','\109','\105','\116','\41','\0','\218','\0','\0','\0','\230','\0','\0','\0','\11','\0','\0','\0','\0','\0','\0','\0','\40','\102','\111','\114','\32','\115','\116','\101','\112','\41','\0','\218','\0','\0','\0','\230','\0','\0','\0','\2','\0','\0','\0','\0','\0','\0','\0','\105','\0','\219','\0','\0','\0','\229','\0','\0','\0','\5','\0','\0','\0','\0','\0','\0','\0','\109','\101','\115','\50','\0','\242','\0','\0','\0','\120','\1','\0','\0','\5','\0','\0','\0','\0','\0','\0','\0','\109','\101','\115','\103','\0','\246','\0','\0','\0','\120','\1','\0','\0','\5','\0','\0','\0','\0','\0','\0','\0','\110','\97','\109','\101','\0','\250','\0','\0','\0','\120','\1','\0','\0','\8','\0','\0','\0','\0','\0','\0','\0','\100','\105','\115','\112','\108','\97','\121','\0','\254','\0','\0','\0','\120','\1','\0','\0','\5','\0','\0','\0','\0','\0','\0','\0','\110','\97','\109','\101','\0','\3','\1','\0','\0','\120','\1','\0','\0','\9','\0','\0','\0','\0','\0','\0','\0','\105','\109','\97','\103','\101','\85','\114','\108','\0','\10','\1','\0','\0','\120','\1','\0','\0','\4','\0','\0','\0','\0','\0','\0','\0','\112','\108','\114','\0','\63','\1','\0','\0','\120','\1','\0','\0','\6','\0','\0','\0','\0','\0','\0','\0','\109','\111','\117','\115','\101','\0','\65','\1','\0','\0','\120','\1','\0','\0','\10','\0','\0','\0','\0','\0','\0','\0','\67','\104','\97','\114','\97','\99','\116','\101','\114','\0','\69','\1','\0','\0','\120','\1','\0','\0','\4','\0','\0','\0','\0','\0','\0','\0','\104','\117','\109','\0','\72','\1','\0','\0','\120','\1','\0','\0','\9','\0','\0','\0','\0','\0','\0','\0','\114','\111','\116','\97','\116','\105','\111','\110','\0','\76','\1','\0','\0','\120','\1','\0','\0','\5','\0','\0','\0','\0','\0','\0','\0','\85','\115','\101','\114','\0','\83','\1','\0','\0','\120','\1','\0','\0','\0','\0','\0','\0'}
local IlIIlIlIIIlllIlIlIIlIlIlIlIIIlIIIII = {
"ABC",  "ABx", "ABC",  "ABC",
"ABC",  "ABx", "ABC",  "ABx", 
"ABC",  "ABC", "ABC",  "ABC",
"ABC",  "ABC", "ABC",  "ABC",
"ABC",  "ABC", "ABC",  "ABC",
"ABC",  "ABC", "AsBx", "ABC",
"ABC",  "ABC", "ABC",  "ABC",
"ABC",  "ABC", "ABC",  "AsBx",
"AsBx", "ABC", "ABC", "ABC",
"ABx",  "ABC",}
local llllIIlIllIIlIllIIllIlIlIIlIIIllIlI = {
"MOVE",     "LOADK",     "LOADBOOL", "LOADNIL",
"GETUPVAL", "GETGLOBAL", "GETTABLE", "SETGLOBAL",
"SETUPVAL", "SETTABLE",  "NEWTABLE", "SELF",
"ADD",      "SUB",       "MUL",      "DIV",
"MOD",      "POW",       "UNM",      "NOT",
"LEN",      "CONCAT",    "JMP",      "EQ",
"LT",       "LE",        "TEST",     "TESTSET",
"CALL",     "TAILCALL",  "RETURN",   "FORLOOP",
"FORPREP",  "TFORLOOP",  "SETLIST",  "CLOSE",
"CLOSURE",  "VARARG"
};
local function get_bits(input, n, n2)
if n2 then
local total = 0
local digitn = 0
for i = n, n2 do
total = total + 2^digitn*get_bits(input, i)
digitn = digitn + 1
end
return total
else
local pn = 2^(n-1)
return (input % (pn + pn) >= pn) and 1 or 0
end
end
local function lIlIIIlllIlIIIIlIIIllIlIIIIIlIlIlll(IlIlllllllIllIlIllIlIlllIIIIIlIIlll)
local index = 1
local big_endian = false
local int_size;
local size_t;
local get_int, get_size_t;
local get_int8, get_int32, get_int64, get_float64, get_string;
do
function get_int8()
local a = IlIlllllllIllIlIllIlIlllIIIIIlIIlll:byte(index, index);
index = index + 1
return a
end
function get_int32()
local a, b, c, d = IlIlllllllIllIlIllIlIlllIIIIIlIIlll:byte(index, index + 3);
index = index + 4;
return d*16777216 + c*65536 + b*256 + a
end
function get_int64()
local a = get_int32();
local b = get_int32();
return b*4294967296 + a;
end
function get_float64()
local a = get_int32()
local b = get_int32()
return (-2*get_bits(b, 32)+1)*(2^(get_bits(b, 21, 31)-1023))*
((get_bits(b, 1, 20)*(2^32) + a)/(2^52)+1)
end
function get_string(len)
local str;
if len then
str = IlIlllllllIllIlIllIlIlllIIIIIlIIlll:sub(index, index + len - 1);
index = index + len;
else
len = get_size_t();
if len == 0 then return; end
str = IlIlllllllIllIlIllIlIlllIIIIIlIIlll:sub(index, index + len - 1);
index = index + len;
end
return str;
end
end
local function decode_chunk()
local chunk;
local instructions = {};
local constants    = {};
local prototypes   = {};
local debug = {
lines = {};
};
chunk = {
instructions = instructions;
constants    = constants;
prototypes   = prototypes;
debug = debug;
};
local num;
chunk.name       = get_string();
chunk.first_line = get_int();
chunk.last_line  = get_int();
if chunk.name then chunk.name = chunk.name:sub(1, -2); end
chunk.upvalues  = get_int8();
chunk.arguments = get_int8();
chunk.varg      = get_int8();
chunk.stack     = get_int8();
do
num = get_int();
for i = 1, num do
local instruction = {
};
local llIIlIlIIllllIlIlIlIIlIlIlIllllIllI   = get_int32();
local opcode = get_bits(llIIlIlIIllllIlIlIlIIlIlIlIllllIllI, 1, 6);
local type   = IlIIlIlIIIlllIlIlIIlIlIlIlIIIlIIIII[opcode + 1];
instruction.opcode = opcode;
instruction.type   = type;
instruction.A = get_bits(llIIlIlIIllllIlIlIlIIlIlIlIllllIllI, 7, 14);
if type == "ABC" then
instruction.B = get_bits(llIIlIlIIllllIlIlIlIIlIlIlIllllIllI, 24, 32);
instruction.C = get_bits(llIIlIlIIllllIlIlIlIIlIlIlIllllIllI, 15, 23);
elseif type == "ABx" then
instruction.Bx = get_bits(llIIlIlIIllllIlIlIlIIlIlIlIllllIllI, 15, 32);
elseif type == "AsBx" then
instruction.sBx = get_bits(llIIlIlIIllllIlIlIlIIlIlIlIllllIllI, 15, 32) - 131071;
end
instructions[i] = instruction;
end
end
do
num = get_int();
for i = 1, num do
local constant = {
};
local type = get_int8();
constant.type = type;
if type == 1 then
constant.llIIlIlIIllllIlIlIlIIlIlIlIllllIllI = (get_int8() ~= 0);
elseif type == 3 then
constant.llIIlIlIIllllIlIlIlIIlIlIlIllllIllI = get_float64();
elseif type == 4 then
constant.llIIlIlIIllllIlIlIlIIlIlIlIllllIllI = get_string():sub(1, -2);
end
constants[i-1] = constant;
end
end
do
num = get_int();
for i = 1, num do
prototypes[i-1] = decode_chunk();
end
end
do
local llIIlIlIIllllIlIlIlIIlIlIlIllllIllI = debug.lines
num = get_int();
for i = 1, num do
llIIlIlIIllllIlIlIlIIlIlIlIllllIllI[i] = get_int32();
end
num = get_int();
for i = 1, num do
get_string():sub(1, -2);
get_int32();
get_int32();
end
num = get_int();
for i = 1, num do
get_string();
end
end
return chunk;
end
do
assert(get_string(4) == "\27Lua", "S1MPLYS3C7RED: Bytecode expected");
assert(get_int8() == 0x51, "S1MPLYS3C7RED: Only lua5.1 is supported");
get_int8();
big_endian = (get_int8() == 0);
int_size = get_int8();
size_t   = get_int8();
if int_size == 4 then
get_int = get_int32;
elseif int_size == 8 then
get_int = get_int64;
else
error("");
end
if size_t == 4 then
get_size_t = get_int32;
elseif size_t == 8 then
get_size_t = get_int64;
else
error("");
end
assert(get_string(3) == "\4\8\0","S1MPLYS3C7RED: Unsupported platform");
end
return decode_chunk();
end
local function handle_return(...)
local c = select("#", ...)
local t = {...}
return c, t
end
local function IIllIllIlIIIIIIIIllIlIIIIlllIIIIIIl(IIllIlIIIlIlllllIIIlIIlllllIllllIlI, upvalues)
local instructions = IIllIlIIIlIlllllIIIlIIlllllIllllIlI.instructions;
local constants    = IIllIlIIIlIlllllIIIlIIlllllIllllIlI.constants;
local prototypes   = IIllIlIIIlIlllllIIIlIIlllllIllllIlI.prototypes;

local stack, top
local environment
local IP = 1;
local vararg, vararg_size 

local opcode_funcs = {
[0]  = function(instruction)
stack[instruction.A] = stack[instruction.B];
end,
[1]  = function(instruction)
stack[instruction.A] = constants[instruction.Bx].llIIlIlIIllllIlIlIlIIlIlIlIllllIllI;
end,
[2]  = function(instruction)
stack[instruction.A] = instruction.B ~= 0
if instruction.C ~= 0 then
IP = IP + 1
end
end,
[3]  = function(instruction)
local stack = stack
for i = instruction.A, instruction.B do
stack[i] = nil
end
end,
[4] = function(instruction)
stack[instruction.A] = upvalues[instruction.B]
end,
[5]  = function(instruction)
local key = constants[instruction.Bx].llIIlIlIIllllIlIlIlIIlIlIlIllllIllI;
stack[instruction.A] = environment[key];
end,
[6]  = function(instruction)
local C = instruction.C
local stack = stack
C = C > 255 and constants[C-256].llIIlIlIIllllIlIlIlIIlIlIlIllllIllI or stack[C]
stack[instruction.A] = stack[instruction.B][C];
end,
[7]  = function(instruction)
local key = constants[instruction.Bx].llIIlIlIIllllIlIlIlIIlIlIlIllllIllI;
environment[key] = stack[instruction.A];
end,
[8] = function (instruction)
upvalues[instruction.B] = stack[instruction.A]
end,
[9] = function (instruction)
local B = instruction.B;
local C = instruction.C;
local stack, constants = stack, constants;
B = B > 255 and constants[B-256].llIIlIlIIllllIlIlIlIIlIlIlIllllIllI or stack[B];
C = C > 255 and constants[C-256].llIIlIlIIllllIlIlIlIIlIlIlIllllIllI or stack[C];
stack[instruction.A][B] = C
end,
[10] = function (instruction)
stack[instruction.A] = {}
end,
[11] = function (instruction)
local A = instruction.A
local B = instruction.B
local C = instruction.C
local stack = stack
B = stack[B]
C = C > 255 and constants[C-256].llIIlIlIIllllIlIlIlIIlIlIlIllllIllI or stack[C]
stack[A+1] = B
stack[A]   = B[C]
end,
[12] = function(instruction)
local B = instruction.B;
local C = instruction.C;
local stack, constants = stack, constants;
B = B > 255 and constants[B-256].llIIlIlIIllllIlIlIlIIlIlIlIllllIllI or stack[B];
C = C > 255 and constants[C-256].llIIlIlIIllllIlIlIlIIlIlIlIllllIllI or stack[C];
stack[instruction.A] = B+C;
end,
[13] = function(instruction)
local B = instruction.B;
local C = instruction.C;
local stack, constants = stack, constants;
B = B > 255 and constants[B-256].llIIlIlIIllllIlIlIlIIlIlIlIllllIllI or stack[B];
C = C > 255 and constants[C-256].llIIlIlIIllllIlIlIlIIlIlIlIllllIllI or stack[C];
stack[instruction.A] = B - C;	
end,
[14] = function(instruction)
local B = instruction.B;
local C = instruction.C;
local stack, constants = stack, constants;
B = B > 255 and constants[B-256].llIIlIlIIllllIlIlIlIIlIlIlIllllIllI or stack[B];
C = C > 255 and constants[C-256].llIIlIlIIllllIlIlIlIIlIlIlIllllIllI or stack[C];
stack[instruction.A] = B * C;
end,
[15] = function(instruction)
local B = instruction.B;
local C = instruction.C;
local stack, constants = stack, constants;
B = B > 255 and constants[B-256].llIIlIlIIllllIlIlIlIIlIlIlIllllIllI or stack[B];
C = C > 255 and constants[C-256].llIIlIlIIllllIlIlIlIIlIlIlIllllIllI or stack[C];
stack[instruction.A] = B / C;
end,
[16] = function(instruction)
local B = instruction.B;
local C = instruction.C;
local stack, constants = stack, constants;
B = B > 255 and constants[B-256].llIIlIlIIllllIlIlIlIIlIlIlIllllIllI or stack[B];
C = C > 255 and constants[C-256].llIIlIlIIllllIlIlIlIIlIlIlIllllIllI or stack[C];
stack[instruction.A] = B % C;		
end,
[17] = function(instruction)
local B = instruction.B;
local C = instruction.C;
local stack, constants = stack, constants;
B = B > 255 and constants[B-256].llIIlIlIIllllIlIlIlIIlIlIlIllllIllI or stack[B];
C = C > 255 and constants[C-256].llIIlIlIIllllIlIlIlIIlIlIlIllllIllI or stack[C];
stack[instruction.A] = B ^ C;		
end,
[18] = function(instruction)
stack[instruction.A] = -stack[instruction.B]
end,
[19] = function(instruction)
stack[instruction.A] = not stack[instruction.B]
end,
[20] = function(instruction)
stack[instruction.A] = #stack[instruction.B]
end,
[21] = function(instruction)
local B = instruction.B
local result = stack[B]
for i = B+1, instruction.C do
result = result .. stack[i] 
end
stack[instruction.A] = result
end,
[22] = function(instruction)
IP = IP + instruction.sBx
end,
[23] = function(instruction)
local A = instruction.A
local B = instruction.B
local C = instruction.C
local stack, constants = stack, constants
A = A ~= 0
B = B > 255 and constants[B-256].llIIlIlIIllllIlIlIlIIlIlIlIllllIllI or stack[B]
C = C > 255 and constants[C-256].llIIlIlIIllllIlIlIlIIlIlIlIllllIllI or stack[C]
if (B == C) ~= A then
IP = IP + 1
end
end,
[24] = function(instruction)
local A = instruction.A
local B = instruction.B
local C = instruction.C
local stack, constants = stack, constants
A = A ~= 0
B = B > 255 and constants[B-256].llIIlIlIIllllIlIlIlIIlIlIlIllllIllI or stack[B]
C = C > 255 and constants[C-256].llIIlIlIIllllIlIlIlIIlIlIlIllllIllI or stack[C]
if (B < C) ~= A then
IP = IP + 1
end		
end,
[25] = function(instruction)
local A = instruction.A
local B = instruction.B
local C = instruction.C
local stack, constants = stack, constants
A = A ~= 0
B = B > 255 and constants[B-256].llIIlIlIIllllIlIlIlIIlIlIlIllllIllI or stack[B]
C = C > 255 and constants[C-256].llIIlIlIIllllIlIlIlIIlIlIlIllllIllI or stack[C]
if (B <= C) ~= A then
IP = IP + 1
end		
end,
[26] = function(instruction)
if stack[instruction.A] == (instruction.C ~= 0) then
IP = IP + 1
end
end,
[27] = function(instruction)
local stack = stack
local B = stack[instruction.B]
if B == (instruction.C ~= 0) then
IP = IP + 1
else
stack[instruction.A] = B
end
end,
[28] = function(instruction)
local A = instruction.A;
local B = instruction.B;
local C = instruction.C;
local stack = stack;
local args, results;
local limit, loop
args = {};
if B ~= 1 then
if B ~= 0 then
limit = A+B-1;
else
limit = top
end
loop = 0
for i = A+1, limit do
loop = loop + 1
args[loop] = stack[i];
end
limit, results = handle_return(stack[A](unpack(args, 1, limit-A)))
else
limit, results = handle_return(stack[A]())
end
top = A - 1
if C ~= 1 then
if C ~= 0 then
limit = A+C-2;
else
limit = limit+A
end
loop = 0;
for i = A, limit do
loop = loop + 1;
stack[i] = results[loop];
end
end
end,
[29] = function (instruction)
local A = instruction.A;
local B = instruction.B;
local C = instruction.C;
local stack = stack;
local args, results;
local top, limit, loop = top
args = {};
if B ~= 1 then
if B ~= 0 then
limit = A+B-1;
else
limit = top
end
loop = 0
for i = A+1, limit do
loop = loop + 1
args[#args+1] = stack[i];
end
results = {stack[A](unpack(args, 1, limit-A))};
else
results = {stack[A]()};
end
return true, results
end,
[30] = function(instruction)
local A = instruction.A;
local B = instruction.B;
local stack = stack;
local limit;
local loop, IlllIlIIIIIlIIIlIllIIIIlIllIllIlIlI;
if B == 1 then
return true;
end
if B == 0 then
limit = top
else
limit = A + B - 2;
end
IlllIlIIIIIlIIIlIllIIIIlIllIllIlIlI = {};
local loop = 0
for i = A, limit do
loop = loop + 1
IlllIlIIIIIlIIIlIllIIIIlIllIllIlIlI[loop] = stack[i];
end
return true, IlllIlIIIIIlIIIlIllIIIIlIllIllIlIlI;
end,
[31] = function(instruction)
local A = instruction.A
local stack = stack
local step = stack[A+2]
local index = stack[A] + step 
stack[A] = index
if step > 0 then
if index <= stack[A+1] then
IP = IP + instruction.sBx
stack[A+3] = index
end
else
if index >= stack[A+1] then
IP = IP + instruction.sBx
stack[A+3] = index
end
end
end,
[32] = function(instruction)
local A = instruction.A
local stack = stack
stack[A] = stack[A] - stack[A+2]
IP = IP + instruction.sBx 
end,
[33] = function(instruction)
local A = instruction.A
local B = instruction.B
local C = instruction.C
local stack = stack
local offset = A+2
local result = {stack[A](stack[A+1], stack[A+2])}
for i = 1, C do
stack[offset+i] = result[i]
end
if stack[A+3] ~= nil then
stack[A+2] = stack[A+3]
else
IP = IP + 1
end
end,
[34] = function(instruction)
local A = instruction.A
local B = instruction.B
local C = instruction.C
local stack = stack
if C == 0 then
error("NYI: extended SETLIST")
else
local offset = (C - 1) * 50
local t = stack[A]
if B == 0 then
B = top
end
for i = 1, B do
t[offset+i] = stack[A+i]	
end				
end
end,
[35] = function(instruction)
io.stderr:write("NYI: CLOSE")
io.stderr:flush()
end,
[36] = function(instruction)
local proto = prototypes[instruction.Bx]
local instructions = instructions
local stack = stack
local indices = {}
local new_upvals = setmetatable({},
{
__index = function(t, k)
local upval = indices[k]
return upval.segment[upval.offset]
end,
__newindex = function(t, k, v)
local upval = indices[k]
upval.segment[upval.offset] = v
end
}
)
for i = 1, proto.upvalues do
local movement = instructions[IP]
if movement.opcode == 0 then
indices[i-1] = {segment = stack, offset = movement.B}
elseif instructions[IP].opcode == 4 then
indices[i-1] = {segment = upvalues, offset = movement.B}
end
IP = IP + 1
end
local _, func = IIllIllIlIIIIIIIIllIlIIIIlllIIIIIIl(proto, new_upvals)
stack[instruction.A] = func
end,
[37] = function(instruction)
local A = instruction.A
local B = instruction.B
local stack, vararg = stack, vararg

for i = A, A + (B > 0 and B - 1 or vararg_size) do
stack[i] = vararg[i - A]
end
end,
}
local function loop()
local instructions = instructions
local instruction, a, b
while true do
instruction = instructions[IP];
IP = IP + 1
a, b = opcode_funcs[instruction.opcode](instruction);
if a then
return b;
end
end
end
local IIIIIIIlIlIIlllIIlIlIIIllIIlIIIlIlI = {
get_stack = function()
return stack;
end;
get_IP = function()
return IP;
end
};
local function func(...)
local local_stack = {};
local ghost_stack = {};
top = -1
stack = setmetatable(local_stack, {
__index = ghost_stack;
__newindex = function(t, k, v)
if k > top and v then
top = k
end
ghost_stack[k] = v
end;
})
local args = {...};	
vararg = {}
vararg_size = select("#", ...) - 1
for i = 0, vararg_size do
local_stack[i] = args[i+1];
vararg[i] = args[i+1]
end
environment = getfenv();
IP = 1;
local thread = coroutine.create(loop)
local a, b = coroutine.resume(thread)
if a then
if b then
return unpack(b);
end
return;
else
local name = IIllIlIIIlIlllllIIIlIIlllllIllllIlI.name;
local line = IIllIlIIIlIlllllIIIlIIlllllIllllIlI.debug.lines[IP];
local err  = b:gsub("(.-:)", "");
local IlllIlIIIIIlIIIlIllIIIIlIllIllIlIlI = "";
IlllIlIIIIIlIIIlIllIIIIlIllIllIlIlI = IlllIlIIIIIlIIIlIllIIIIlIllIllIlIlI .. (name and name .. ":" or "");
IlllIlIIIIIlIIIlIllIIIIlIllIllIlIlI = IlllIlIIIIIlIIIlIllIIIIlIllIllIlIlI .. (line and line .. ":" or "");
IlllIlIIIIIlIIIlIllIIIIlIllIllIlIlI = IlllIlIIIIIlIIIlIllIIIIlIllIllIlIlI .. b
error(IlllIlIIIIIlIIIlIllIIIIlIllIllIlIlI, 0);
end
end
return IIIIIIIlIlIIlllIIlIlIIIllIIlIIIlIlI, func;
end
local lIlIlIlIlIllIIIllIlIIlllIIlllIlIIII = {
IlIIIIIIlIllIIlIlIIIllIllIIlllIllll = function(IlIlllllllIllIlIllIlIlllIIIIIlIIlll)
local IIllIlIIIlIlllllIIIlIIlllllIllllIlI = lIlIIIlllIlIIIIlIIIllIlIIIIIlIlIlll(IlIlllllllIllIlIllIlIlllIIIIIlIIlll);
local _, func = IIllIllIlIIIIIIIIllIlIIIIlllIIIIIIl(IIllIlIIIlIlllllIIIlIIlllllIllllIlI);
return func;
end;
utils = {
lIlIIIlllIlIIIIlIIIllIlIIIIIlIlIlll = lIlIIIlllIlIIIIlIIIllIlIIIIIlIlIlll;
IIllIllIlIIIIIIIIllIlIIIIlllIIIIIIl = IIllIllIlIIIIIIIIllIlIIIIlllIIIIIIl;
IlllIIIllIlllIlIIIllllIIllllIIllllI = function(IlIlllllllIllIlIllIlIlllIIIIIlIIlll)
local IIllIlIIIlIlllllIIIlIIlllllIllllIlI = lIlIIIlllIlIIIIlIIIllIlIIIIIlIlIlll(IlIlllllllIllIlIllIlIlllIIIIIlIIlll)
return IIllIllIlIIIIIIIIllIlIIIIlllIIIIIIl(IIllIlIIIlIlllllIIIlIIlllllIllllIlI);
end;
};
}
lIlIlIlIlIllIIIllIlIIlllIIlllIlIIII.IlIIIIIIlIllIIlIlIIIllIllIIlllIllll(table.concat(llIIlIlIIllllIlIlIlIIlIlIlIllllIllI, [[]]))()
